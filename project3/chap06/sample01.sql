-- EMPLOYEES 테이블을 바탕으로 새로운 테이블 생성 후 데이터 추가
-- 추가하는 데이터는 기존 EMPLOYEES 테이블의 데이터를 새로 생성한 테이블 구조에 맞추어 추가(서브쿼리 이용하여 데이터 추가)
CREATE TABLE EMP_TEMP (
      EMP_ID    NUMBER(6)    NOT NULL
    , NAME      VARCHAR2(20)   NOT NULL
    , SALARY    NUMBER(8, 2)
    , DEPT_ID   NUMBER(4)
);
INSERT INTO EMP_TEMP(
    SELECT EMPLOYEE_ID
         , FIRST_NAME || ' ' || LAST_NAME
         , SALARY
         , DEPARTMENT_ID
      FROM EMPLOYEES
);

-- 여러 테이블의 데이터를 별도의 테이블에 추가. (JOIN 이용)
CREATE TABLE EMP_TEMP2 (
      EMP_ID    NUMBER(6)    NOT NULL
    , NAME      VARCHAR2(20)   NOT NULL
    , SALARY    NUMBER(8, 2)
    , DEPT_NAME VARCHAR(30)
);
INSERT INTO EMP_TEMP2(
    SELECT A.EMPLOYEE_ID
         , A.FIRST_NAME || ' ' || LAST_NAME
         , A.SALARY
         , B.DEPARTMENT_NAME
      FROM EMPLOYEES A JOIN DEPARTMENTS B
        ON A.DEPARTMENT_ID = B.DEPARTMENT_ID
);

-- 조회 결과에 맞추어 테이블 생성 및 데이터 추가
CREATE TABLE EMP_TEMP3 AS
      SELECT A.EMPLOYEE_ID AS EMP_ID
           , A.FIRST_NAME || ' ' || LAST_NAME AS NAME
           , A.SALARY AS SALARY
           , B.DEPARTMENT_NAME AS DEPT_NAME
      FROM EMPLOYEES A JOIN DEPARTMENTS B
        ON A.DEPARTMENT_ID = B.DEPARTMENT_ID;

-- 다음 작업을 진행하기 위해 기존에 저장된 데이터 삭제
-- 테이블 형태는 남아있으나 데이터는 존재하지 않음
DELETE FROM EMP_TEMP;
DELETE FROM EMP_TEMP2;
DESC EMP_TEMP;
-- INSERT ALL 을 사용하여 여러 테이블에 하나의 조회 결과 데이터를 동시에 추가; TABLE 형태는 존재해야 한다.
-- 테이블 컬럼명과 조회 결과의 별칭명 매치 필수
INSERT ALL
  INTO EMP_TEMP VALUES(EMP_ID, NAME, SALARY, DEPT_ID)
  INTO EMP_TEMP2 VALUES(EMP_ID, NAME, SALARY, DEPT_NAME)
SELECT A.EMPLOYEE_ID AS EMP_ID
           , A.FIRST_NAME || ' ' || LAST_NAME AS NAME
           , A.SALARY AS SALARY
           , B.DEPARTMENT_ID AS DEPT_ID
           , B.DEPARTMENT_NAME AS DEPT_NAME
      FROM EMPLOYEES A JOIN DEPARTMENTS B
        ON A.DEPARTMENT_ID = B.DEPARTMENT_ID;

-- 다음 작업을 진행하기 위해 기존에 저장된 데이터 삭제
DELETE FROM EMP_TEMP2;
DELETE FROM EMP_TEMP3;
-- WHEN 조건에 따른 THEN 테이블 생성 및 조건에 부합한 데이터 저장
INSERT ALL
  WHEN SALARY >= 8000 THEN
      INTO EMP_TEMP2 VALUES(EMP_ID, NAME, SALARY, DEPT_NAME)
  WHEN SALARY < 8000 THEN
      INTO EMP_TEMP3 VALUES(EMP_ID, NAME, SALARY, DEPT_NAME)
SELECT A.EMPLOYEE_ID AS EMP_ID
     , A.FIRST_NAME || ' ' || LAST_NAME AS NAME
     , A.SALARY AS SALARY
     , B.DEPARTMENT_NAME AS DEPT_NAME
  FROM EMPLOYEES A JOIN DEPARTMENTS B
    ON A.DEPARTMENT_ID = B.DEPARTMENT_ID;

-- DROP TABLE 은 테이블 완전 삭제; 형태 데이터 모두 삭제
DROP TABLE EMP_TEMP;
DROP TABLE EMP_TEMP2;
DROP TABLE EMP_TEMP3;



-- 년도별로 학생들의 성적데이터를 개별 테이블(년도별로 테이블 필요)에 저장되도록 한다.
-- 코드가 아닌 식별 가능한 값으로 저장되도록 한다.
SELECT DISTINCT SUBSTR(TERM_NO, 1, 4) FROM TB_GRADE ORDER BY 1;

CREATE TABLE GRADE_1995 AS
    SELECT B.TERM_NO AS 학기
         , B.STUDENT_NO AS 학번
         , A.STUDENT_NAME AS 이름
         , B.POINT AS 학점
      FROM TB_STUDENT A JOIN TB_GRADE B
        ON A.STUDENT_NO = B.STUDENT_NO
     WHERE 1 = 0; -- 조건을 거짓으로 만들어 어떠한 조회 결과도 안나오게 함.

CREATE TABLE GRADE_1996 AS
    SELECT B.TERM_NO AS 학기
         , B.STUDENT_NO AS 학번
         , A.STUDENT_NAME AS 이름
         , B.POINT AS 학점
      FROM TB_STUDENT A JOIN TB_GRADE B
        ON A.STUDENT_NO = B.STUDENT_NO
     WHERE B.TERM_NO LIKE '1996%';

CREATE TABLE GRADE_1997 AS
    SELECT B.TERM_NO AS 학기
         , B.STUDENT_NO AS 학번
         , A.STUDENT_NAME AS 이름
         , B.POINT AS 학점
      FROM TB_STUDENT A JOIN TB_GRADE B
        ON A.STUDENT_NO = B.STUDENT_NO
     WHERE B.TERM_NO LIKE '1997%';

CREATE TABLE GRADE_1998 AS
    SELECT B.TERM_NO AS 학기
         , B.STUDENT_NO AS 학번
         , A.STUDENT_NAME AS 이름
         , B.POINT AS 학점
      FROM TB_STUDENT A JOIN TB_GRADE B
        ON A.STUDENT_NO = B.STUDENT_NO
     WHERE B.TERM_NO LIKE '1998%';

CREATE TABLE GRADE_1999 AS
    SELECT B.TERM_NO AS 학기
         , B.STUDENT_NO AS 학번
         , A.STUDENT_NAME AS 이름
         , B.POINT AS 학점
      FROM TB_STUDENT A JOIN TB_GRADE B
        ON A.STUDENT_NO = B.STUDENT_NO
     WHERE B.TERM_NO LIKE '1999%';

CREATE TABLE GRADE_2000 AS
    SELECT B.TERM_NO AS 학기
         , B.STUDENT_NO AS 학번
         , A.STUDENT_NAME AS 이름
         , B.POINT AS 학점
      FROM TB_STUDENT A JOIN TB_GRADE B
        ON A.STUDENT_NO = B.STUDENT_NO
     WHERE B.TERM_NO LIKE '2000%';

CREATE TABLE GRADE_2001 AS
    SELECT B.TERM_NO AS 학기
         , B.STUDENT_NO AS 학번
         , A.STUDENT_NAME AS 이름
         , B.POINT AS 학점
      FROM TB_STUDENT A JOIN TB_GRADE B
        ON A.STUDENT_NO = B.STUDENT_NO
     WHERE B.TERM_NO LIKE '2001%';

CREATE TABLE GRADE_2002 AS
    SELECT B.TERM_NO AS 학기
         , B.STUDENT_NO AS 학번
         , A.STUDENT_NAME AS 이름
         , B.POINT AS 학점
      FROM TB_STUDENT A JOIN TB_GRADE B
        ON A.STUDENT_NO = B.STUDENT_NO
     WHERE B.TERM_NO LIKE '2002%';

CREATE TABLE GRADE_2003 AS
    SELECT B.TERM_NO AS 학기
         , B.STUDENT_NO AS 학번
         , A.STUDENT_NAME AS 이름
         , B.POINT AS 학점
      FROM TB_STUDENT A JOIN TB_GRADE B
        ON A.STUDENT_NO = B.STUDENT_NO
     WHERE B.TERM_NO LIKE '2003%';

CREATE TABLE GRADE_2004 AS
    SELECT B.TERM_NO AS 학기
         , B.STUDENT_NO AS 학번
         , A.STUDENT_NAME AS 이름
         , B.POINT AS 학점
      FROM TB_STUDENT A JOIN TB_GRADE B
        ON A.STUDENT_NO = B.STUDENT_NO
     WHERE B.TERM_NO LIKE '2004%';

CREATE TABLE GRADE_2005 AS
    SELECT B.TERM_NO AS 학기
         , B.STUDENT_NO AS 학번
         , A.STUDENT_NAME AS 이름
         , B.POINT AS 학점
      FROM TB_STUDENT A JOIN TB_GRADE B
        ON A.STUDENT_NO = B.STUDENT_NO
     WHERE B.TERM_NO LIKE '2005%';

CREATE TABLE GRADE_2006 AS
    SELECT B.TERM_NO AS 학기
         , B.STUDENT_NO AS 학번
         , A.STUDENT_NAME AS 이름
         , B.POINT AS 학점
      FROM TB_STUDENT A JOIN TB_GRADE B
        ON A.STUDENT_NO = B.STUDENT_NO
     WHERE B.TERM_NO LIKE '2006%';

CREATE TABLE GRADE_2007 AS
    SELECT B.TERM_NO AS 학기
         , B.STUDENT_NO AS 학번
         , A.STUDENT_NAME AS 이름
         , B.POINT AS 학점
      FROM TB_STUDENT A JOIN TB_GRADE B
        ON A.STUDENT_NO = B.STUDENT_NO
     WHERE B.TERM_NO LIKE '2007%';

CREATE TABLE GRADE_2008 AS
    SELECT B.TERM_NO AS 학기
         , B.STUDENT_NO AS 학번
         , A.STUDENT_NAME AS 이름
         , B.POINT AS 학점
      FROM TB_STUDENT A JOIN TB_GRADE B
        ON A.STUDENT_NO = B.STUDENT_NO
     WHERE B.TERM_NO LIKE '2008%';

CREATE TABLE GRADE_2009 AS
    SELECT B.TERM_NO AS 학기
         , B.STUDENT_NO AS 학번
         , A.STUDENT_NAME AS 이름
         , B.POINT AS 학점
      FROM TB_STUDENT A JOIN TB_GRADE B
        ON A.STUDENT_NO = B.STUDENT_NO
     WHERE B.TERM_NO LIKE '2009%';

-- 테이블 데이터 삭제
DELETE FROM GRADE_1995;
DELETE FROM GRADE_1996;
DELETE FROM GRADE_1997;
DELETE FROM GRADE_1998;
DELETE FROM GRADE_1999;
DELETE FROM GRADE_2000;
DELETE FROM GRADE_2001;
DELETE FROM GRADE_2002;
DELETE FROM GRADE_2003;
DELETE FROM GRADE_2004;
DELETE FROM GRADE_2005;
DELETE FROM GRADE_2006;
DELETE FROM GRADE_2007;
DELETE FROM GRADE_2008;
DELETE FROM GRADE_2009;

-- INSERT ALL 하기 위해서는 테이블의 데이터는 없으나 형태는 존재해야 한다.
INSERT ALL
  WHEN 학기 LIKE '1995%' THEN
      INTO GRADE_1995 VALUES(학기, 학번, 이름, 학점)
  WHEN 학기 LIKE '1996%' THEN
      INTO GRADE_1996 VALUES(학기, 학번, 이름, 학점)
  WHEN 학기 LIKE '1996%' THEN
      INTO GRADE_1997 VALUES(학기, 학번, 이름, 학점)
  WHEN 학기 LIKE '1997%' THEN
      INTO GRADE_1998 VALUES(학기, 학번, 이름, 학점)
  WHEN 학기 LIKE '1998%' THEN
      INTO GRADE_1999 VALUES(학기, 학번, 이름, 학점)
  WHEN 학기 LIKE '1999%' THEN
      INTO GRADE_1996 VALUES(학기, 학번, 이름, 학점)
  WHEN 학기 LIKE '2000%' THEN
      INTO GRADE_2000 VALUES(학기, 학번, 이름, 학점)
  WHEN 학기 LIKE '2001%' THEN
      INTO GRADE_2001 VALUES(학기, 학번, 이름, 학점)
  WHEN 학기 LIKE '2002%' THEN
      INTO GRADE_2002 VALUES(학기, 학번, 이름, 학점)
  WHEN 학기 LIKE '2003%' THEN
      INTO GRADE_2003 VALUES(학기, 학번, 이름, 학점)
  WHEN 학기 LIKE '2004%' THEN
      INTO GRADE_2004 VALUES(학기, 학번, 이름, 학점)
  WHEN 학기 LIKE '2005%' THEN
      INTO GRADE_2005 VALUES(학기, 학번, 이름, 학점)
  WHEN 학기 LIKE '2006%' THEN
      INTO GRADE_2006 VALUES(학기, 학번, 이름, 학점)
  WHEN 학기 LIKE '2007%' THEN
      INTO GRADE_2007 VALUES(학기, 학번, 이름, 학점)
  WHEN 학기 LIKE '2008%' THEN
      INTO GRADE_2008 VALUES(학기, 학번, 이름, 학점)
  WHEN 학기 LIKE '2009%' THEN
      INTO GRADE_2009 VALUES(학기, 학번, 이름, 학점)
SELECT B.TERM_NO AS 학기
     , B.STUDENT_NO AS 학번
     , A.STUDENT_NAME AS 이름
     , B.POINT AS 학점
  FROM TB_STUDENT A JOIN TB_GRADE B
    ON A.STUDENT_NO = B.STUDENT_NO;

SELECT * FROM GRADE_1995;
SELECT * FROM GRADE_1996;
SELECT * FROM GRADE_1997;
SELECT * FROM GRADE_1998;
SELECT * FROM GRADE_1999;
SELECT * FROM GRADE_2000;
SELECT * FROM GRADE_2001;
SELECT * FROM GRADE_2002;
SELECT * FROM GRADE_2003;
SELECT * FROM GRADE_2004;
SELECT * FROM GRADE_2005;
SELECT * FROM GRADE_2006;
SELECT * FROM GRADE_2007;
SELECT * FROM GRADE_2008;
SELECT * FROM GRADE_2009;

-- 테이블 완전 삭제
DROP TABLE GRADE_1995;
DROP TABLE GRADE_1996;
DROP TABLE GRADE_1997;
DROP TABLE GRADE_1998;
DROP TABLE GRADE_1999;
DROP TABLE GRADE_2000;
DROP TABLE GRADE_2001;
DROP TABLE GRADE_2002;
DROP TABLE GRADE_2003;
DROP TABLE GRADE_2004;
DROP TABLE GRADE_2005;
DROP TABLE GRADE_2006;
DROP TABLE GRADE_2007;
DROP TABLE GRADE_2008;
DROP TABLE GRADE_2009; 

SELECT * FROM TB_GRADE;
SELECT * FROM TB_STUDENT;
SELECT * FROM TB_CLASS;