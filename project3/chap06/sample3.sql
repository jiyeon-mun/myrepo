/*
1. 학생별 2009년도 평균 학점을 저장한 테이블 생성하기.
   (년도, 학번, 이름, 평균학점 컬럼 필요)

   2009년도에 대해서 각 학생마다의 평균학점을 구해야 한다.
   => GROUP BY 년도, 학번, 이름
*/

-- 테이블 생성과 동시에 데이터 추가
CREATE TABLE STD_AVG_POINT AS
SELECT SUBSTR(B.TERM_NO,1,4) AS 년도
        , B.STUDENT_NO AS 학번
        , A.STUDENT_NAME AS 이름
        , AVG(B.POINT) AS 학점
    FROM TB_STUDENT A JOIN TB_GRADE B
    ON A.STUDENT_NO = B.STUDENT_NO
    WHERE B.TERM_NO LIKE '2009%'
    GROUP BY SUBSTR(B.TERM_NO,1,4), B.STUDENT_NO, A.STUDENT_NAME;

DROP TABLE STD_AVG_POINT;

-- 기존 테이블 바탕으로 새로운 테이블 생성 CREATE 후에
-- 기존 테이블의 데이터를 생성한 테이블 구조에 맞추어 추가 INSERT : 서브쿼리 이용
CREATE TABLE STD_AVG_POINT(
      년도      VARCHAR2(10)    NOT NULL
    , 학번      VARCHAR2(10)    NOT NULL
    , 이름      VARCHAR2(10)    NOT NULL
    , 평균학점  NUMBER(3,2)
);
INSERT INTO STD_AVG_POINT(
    SELECT SUBSTR(B.TERM_NO,1,4)
         , A.STUDENT_NO
         , A.STUDENT_NAME
         , AVG(B.POINT)
      FROM TB_STUDENT A JOIN TB_GRADE B
        ON A.STUDENT_NO = B.STUDENT_NO
     WHERE B.TERM_NO LIKE '2009%'
     GROUP BY SUBSTR(B.TERM_NO,1,4), A.STUDENT_NO, A.STUDENT_NAME
);
DESC STD_AVG_POINT;



/*
2. 학과별 학생 인원수와 교수 인원수를 저장한 테이블 생성하기.
   (학과코드, 학과명, 학생 인원수, 교수 인원수 컬럼 필요)

   TB_DEPARTMENT, TB_STUDENT, TB_PROFESSOR 테이블 JOIN
*/
-- 테이블 생성과 동시에 데이터 추가
CREATE TABLE DEPT_CNT AS
SELECT A.DEPARTMENT_NO AS 학과번호
     , A.DEPARTMENT_NAME AS 학과명
     , COUNT(DISTINCT B.STUDENT_NO) AS 학생인원
     , COUNT(DISTINCT C.PROFESSOR_NO) AS 교수인원
  FROM TB_DEPARTMENT A JOIN TB_STUDENT B
    ON A.DEPARTMENT_NO = B.DEPARTMENT_NO
  JOIN TB_PROFESSOR C
    ON A.DEPARTMENT_NO = C.DEPARTMENT_NO
 GROUP BY A.DEPARTMENT_NO, A.DEPARTMENT_NAME
 ORDER BY 1;


-- 두 개의 테이블을 JOIN하고 하나의 테이블 별칭명으로 지정하여 또다른 테이블을 JOIN
SELECT C.DEPARTMENT_NO AS 학과코드
     , C.DEPARTMENT_NAME AS 학과명
     , C.학생인원
     , COUNT(D.PROFESSOR_NO) AS 교수인원
  FROM (SELECT A.DEPARTMENT_NO
             , A.DEPARTMENT_NAME
             , COUNT(B.STUDENT_NO) AS 학생인원
          FROM TB_DEPARTMENT A JOIN TB_STUDENT B
            ON A.DEPARTMENT_NO = B.DEPARTMENT_NO
         GROUP BY A.DEPARTMENT_NO, A.DEPARTMENT_NAME) C
  JOIN TB_PROFESSOR D
    ON C.DEPARTMENT_NO = D.DEPARTMENT_NO
 GROUP BY C.DEPARTMENT_NO, C.DEPARTMENT_NAME, C.학생인원
 ORDER BY 1;
-- 아래처럼 JOIN하는 경우 테이블C가 테이블A와 B에 대해 각각 JOIN하여 COUNT에 곱이 이루어진다.
-- COUNT 해야하는 컬럼에 대해 각각 DISTINCT(중복제거)를 하여 3개의 테이블을 JOIN한다.
SELECT A.DEPARTMENT_NO AS 학과번호
     , A.DEPARTMENT_NAME AS 학과명
     , COUNT(DISTINCT B.STUDENT_NO) AS 학생인원
     , COUNT(DISTINCT C.PROFESSOR_NO) AS 교수인원
  FROM TB_DEPARTMENT A JOIN TB_STUDENT B
    ON A.DEPARTMENT_NO = B.DEPARTMENT_NO
  JOIN TB_PROFESSOR C
    ON A.DEPARTMENT_NO = C.DEPARTMENT_NO
 GROUP BY A.DEPARTMENT_NO, A.DEPARTMENT_NAME
 ORDER BY 1;



/*
    VIEW 만들기
    CREATE [OR REPLACE] [FORCE|NOFORCE] VIEW 뷰이름 [(column_aliases)]
    AS
        SELECT 문
    ;
    [OR REPLACE] : 기존의 VIEW 내용 변경 / VIEW가 존재하지 않다면 만들어라
    [FORCE] : 쿼리문의 테이블, 컬럼, 함수 등이 일부 존재하지 않아도 생성됨
    [NOFORCE] : 쿼리문의 테이블, 컬럼 함수 등이 모두 정상적으로 생성되어 있어야 생성됨
    
*/
CREATE OR REPLACE FORCE VIEW V_STD_AVG_POINT AS
SELECT SUBSTR(B.TERM_NO,1,4) AS 년도
     , B.STUDENT_NO AS 학번
     , A.STUDENT_NAME AS 이름
     , AVG(B.POINT) AS 학점
  FROM TB_STUDENT A JOIN TB_GRADE B
    ON A.STUDENT_NO = B.STUDENT_NO
 WHERE B.TERM_NO LIKE '2009%'
 GROUP BY SUBSTR(B.TERM_NO,1,4), B.STUDENT_NO, A.STUDENT_NAME;
WITH CHECK OPTION; -- WHERE절 조건으로 사용된 컬럼의 데이터값 수정을 불가능하게 만드는 옵션

CREATE OR REPLACE FORCE VIEW V_DEPT_STD_PRO_COUNT AS
SELECT B.DEPARTMENT_NO
     , B.DEPARTMENT_NAME
     , COUNT(DISTINCT A.STUDENT_NO) AS 학생수
     , COUNT(DISTINCT C.PROFESSOR_NO) AS 교수인원
  FROM TB_STUDENT A JOIN TB_DEPARTMENT B
    ON A.DEPARTMENT_NO = B.DEPARTMENT_NO
  JOIN TB_PROFESSOR C
    ON B.DEPARTMENT_NO = C.DEPARTMENT_NO
 GROUP BY B.DEPARTMENT_NO, B.DEPARTMENT_NAME
 ORDER BY 1;
WITH READ ONLY; -- 기본 테이블의 어떤 컬럼에 대해서도 뷰를 통한 내용 수정을 불가능하게 만드는 옵션

-- VIEW 조회
SELECT * FROM V_STD_AVG_POINT;
SELECT * FROM V_DEPT_STD_PRO_COUNT;
-- VIEW 정보  확인
SELECT * FROM USER_VIEWS WHERE VIEW_NAME = 'V_STD_AVG_POINT';

CREATE TABLE SAMPLE_T(
      id NUMBER NOT NULL
    , name VARCHAR2(10)
    , age NUMBER
);
INSERT INTO SAMPLE_T VALUES(1,'홍길동',30);
INSERT INTO SAMPLE_T VALUES(2,NULL,24);
INSERT INTO SAMPLE_T VALUES(3,'할라',NULL);

CREATE VIEW V_SAMPLE_T AS
SELECT id, name FROM SAMPLE_T;

CREATE VIEW V_SAMPLE_T2 AS
SELECT id, age FROM SAMPLE_T WHERE age BETWEEN 0 AND 100
WITH CHECK OPTION;

SELECT * FROM V_SAMPLE_T;
INSERT INTO V_SAMPLE_T VALUES(4, 'LIGHT');

SELECT * FROM V_SAMPLE_T2;
INSERT INTO V_SAMPLE_T2 VALUES(5, 13);

-- INSERT INTO V_SAMPLE_T2 VALUES(6, 200);
-- ERROR : view WITH CHECK OPTION where-clause violation
-- WITH CHECK OPTION으로 인해 age컬럼에는 WHERE절 범위 내 값(0~100)으로만 추가 및 수정 가능

SELECT * FROM SAMPLE_T;