DROP SEQUENCE TEMP_SEQ;
CREATE SEQUENCE TEMP_SEQ; -- 별다른 옵션없이 SEQUENCE 생성 가능

-- 시퀀스 객체를 처음 생성 후에는 NEXTVAL를 하여 값의 생성이 필요하다.
SELECT TEMP_SEQ.NEXTVAL FROM DUAL; -- 다음 값의 생성
SELECT TEMP_SEQ.CURRVAL FROM DUAL; -- 생성된 현재 값

-- 현재 계정이 소유한 시퀀스들의 정보 : 초기값,최종값,증가치 및 옵션들 활성화 여부
SELECT * FROM USER_SEQUENCES;

DROP TABLE TEMP_T;
CREATE TABLE TEMP_T(
      id NUMBER PRIMARY KEY
    , name VARCHAR(10)
    , gender CHAR(1) DEFAULT('M') CHECK(gender IN ('M','W'))
);

INSERT INTO TEMP_T VALUES(1,'AAAA','M');
INSERT INTO TEMP_T VALUES(2,'AAAA','M');
INSERT INTO TEMP_T VALUES(3,'AAAA','M');

-- 위에서 생성한 시퀀스 값의 다음 값이 ID의 값이 되도록 삽입한다.
-- 이때 추가하려는 시퀀스값은 ID에 저장된 마지막 데이터값과 동일하거나 더 커야 한다.
-- 아래문장을 계속 커밋시켜 시퀀스값을 증가시킬 수 있다.
INSERT INTO TEMP_T VALUES(TEMP_SEQ.NEXTVAL,'AAAA','M');

-- 저장된 ID 값들이 현재 시퀀스의 다음값부터 차례로 증가되도록 변경한다.
UPDATE TEMP_T SET ID = TEMP_SEQ.NEXTVAL;

SELECT * FROM TEMP_T;



-- 비공개 동의어
-- ADMIN 계정으로 접속하여 USER1 계정에 SYNONYM 권한 부여
GRANT CREATE SYNONYM TO USER1;

CREATE SYNONYM EMP FOR EMPLOYEES; -- USER1 계정에서

SELECT * FROM EMPLOYEES;
SELECT * FROM EMP; -- USER1 계정에 대해서만 생성된 동의어


-- 공개 동의어
-- 시스템 계정으로 전환 후 다음의 구문 실행
CREATE PUBLIC SYNONYM EMPS FOR USER1.EMPLOYEES;

-- 시스템 계정 접속 시 49번 줄처럼 작성해야 하나 50번 줄 역시 실행 가능하다.
SELECT * FROM USER1.EMPLOYEES;
SELECT * FROM EMPS; -- SYNONYM 권한으로 생성된 동의어이기 때문에 실행 가능하다.
-- SELECT * FROM EMPLOYEES; -- ERROR

SELECT * FROM USER_SYNONYMS;
SELECT * FROM ALL_SYNONYMS
 WHERE OWNER = 'PUBLIC'
   AND NOT (TABLE_OWNER LIKE '%SYS%'
    OR TABLE_OWNER LIKE '%SERVICE%' OR TABLE_OWNER LIKE '%APEX%');




DROP TABLE STUDENT_ABSENCE_TABLE;
CREATE TABLE STUDENT_ABSENCE_TABLE(
      ID            NUMBER
    , 학번          VARCHAR2(10) NOT NULL
    , 학과코드      VARCHAR2(10) NOT NULL
    , 이름          VARCHAR2(50) NOT NULL
    , 담당교수코드  VARCHAR2(10)
);

DROP SEQUENCE STD_SEQ;
CREATE SEQUENCE STD_SEQ;
INSERT INTO STUDENT_ABSENCE_TABLE(
    SELECT STD_SEQ.NEXTVAL
         , STUDENT_NO
         , DEPARTMENT_NO
         , STUDENT_NAME
         , COACH_PROFESSOR_NO
      FROM TB_STUDENT
     WHERE ABSENCE_YN = 'Y'
);
-- 위에서 이미 ADMIN 계정이 USER1 계정에 SYNONYM 생성 권한 부여했어서 GRANT문 생략
CREATE SYNONYM STD_ABC FOR STUDENT_ABSENCE_TABLE;
SELECT * FROM STUDENT_ABSENCE_TABLE;
SELECT * FROM STD_ABC;


CREATE VIEW STUDENT_ABSENCE_VIEW AS
SELECT * FROM STUDENT_ABSENCE_TABLE;

CREATE SYNONYM V_STD_ABC FOR STUDENT_ABSENCE_VIEW;
SELECT * FROM STUDENT_ABSENCE_VIEW;
SELECT * FROM V_STD_ABC;

-- ROWID : 테이블에서 행의 위치를 지정하는 논리적인 주소값으로 중복되지 않으며 자동 생성된다.
SELECT ROWID
     , STUDENT_NO
     , STUDENT_NAME
  FROM TB_STUDENT;